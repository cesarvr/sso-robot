[H[JServer URL: https://console.rhos.agriculture.gov.ie
cmd:  [ 'test', 'sso-dev' ]
args: C:\cesar\cmder\vendor\node-v12\node.exe,C:\work\sso\agent-sso\sso.js,test,sso-dev,--token=NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI,--project=sso-dev ==> params: {
    "token": "NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI",
    "project": "sso-dev"
} 
args ==> {
  action: 'test',
  resource: 'sso-dev',
  params: {
    token: 'NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI',
    project: 'sso-dev'
  }
}
command ==> { required: [ 'token', 'project' ], executor: [Function: executor] }


Missing the  parameters: 

opts =>  {
  action: 'test',
  resource: 'sso-dev',
  params: {
    token: 'NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI',
    project: 'sso-dev'
  }
}
cluster =>  https://console.rhos.agriculture.gov.ie token => NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI
list:  {
  kind: 'PodList',
  apiVersion: 'v1',
  metadata: {
    selfLink: '/api/v1/namespaces/sso-dev/pods',
    resourceVersion: '84193449'
  },
  items: [
    { metadata: [Object], spec: [Object], status: [Object] },
    { metadata: [Object], spec: [Object], status: [Object] },
    { metadata: [Object], spec: [Object], status: [Object] },
    { metadata: [Object], spec: [Object], status: [Object] },
    { metadata: [Object], spec: [Object], status: [Object] },
    { metadata: [Object], spec: [Object], status: [Object] },
    { metadata: [Object], spec: [Object], status: [Object] },
    { metadata: [Object], spec: [Object], status: [Object] }
  ]
}
==========================
Server URL: https://console.rhos.agriculture.gov.ie
cmd:  [ 'builder' ]
args: C:\cesar\cmder\vendor\node-v12\node.exe,C:\work\sso\agent-sso\sso.js,builder,--token=NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI,--project=hello,--name=sso73 ==> params: {
    "token": "NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI",
    "project": "hello",
    "name": "sso73"
} 
args ==> {
  action: 'builder',
  resource: undefined,
  params: {
    token: 'NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI',
    project: 'hello',
    name: 'sso73'
  }
}
command ==> {
  required: [ 'name', 'token', 'project' ],
  executor: [Function: executor]
}


Missing the  parameters: 

name =>  sso73
files => [
    {
        "name": "build",
        "file": {
            "apiVersion": "build.openshift.io/v1",
            "kind": "BuildConfig",
            "metadata": {
                "annotations": {
                    "openshift.io/generated-by": "sso-image",
                    "application": "sso73"
                },
                "labels": {
                    "build": "sso-build",
                    "application": "sso-image"
                },
                "name": "sso73"
            },
            "spec": {
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "sso73:latest"
                    }
                },
                "source": {
                    "binary": {},
                    "type": "Binary"
                },
                "strategy": {
                    "dockerStrategy": {
                        "from": {
                            "kind": "ImageStreamTag",
                            "name": "redhat-sso73-openshift:1.0",
                            "namespace": "openshift"
                        }
                    },
                    "type": "Docker"
                },
                "triggers": []
            },
            "status": {
                "lastVersion": 0
            }
        }
    },
    {
        "name": "is",
        "file": {
            "apiVersion": "image.openshift.io/v1",
            "kind": "ImageStream",
            "metadata": {
                "annotations": {
                    "openshift.io/generated-by": "sso-image",
                    "application": "sso73"
                },
                "labels": {
                    "build": "sso-build"
                },
                "name": "sso73"
            }
        }
    }
] NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI
 full:  {
  apiVersion: 'build.openshift.io/v1',
  kind: 'BuildConfig',
  metadata: {
    annotations: { 'openshift.io/generated-by': 'sso-image', application: 'sso73' },
    labels: { build: 'sso-build', application: 'sso-image' },
    name: 'sso73'
  },
  spec: {
    output: { to: [Object] },
    source: { binary: {}, type: 'Binary' },
    strategy: { dockerStrategy: [Object], type: 'Docker' },
    triggers: []
  },
  status: { lastVersion: 0 }
}  kind => BuildConfig
 full:  {
  apiVersion: 'image.openshift.io/v1',
  kind: 'ImageStream',
  metadata: {
    annotations: { 'openshift.io/generated-by': 'sso-image', application: 'sso73' },
    labels: { build: 'sso-build' },
    name: 'sso73'
  }
}  kind => ImageStream
[
  {
    kind: 'Status',
    apiVersion: 'v1',
    metadata: {},
    status: 'Failure',
    message: 'buildconfigs.build.openshift.io "sso73" already exists',
    reason: 'AlreadyExists',
    details: {
      name: 'sso73',
      group: 'build.openshift.io',
      kind: 'buildconfigs'
    },
    code: 409
  },
  {
    kind: 'Status',
    apiVersion: 'v1',
    metadata: {},
    status: 'Failure',
    message: 'imagestreams.image.openshift.io "sso73" already exists',
    reason: 'AlreadyExists',
    details: {
      name: 'sso73',
      group: 'image.openshift.io',
      kind: 'imagestreams'
    },
    code: 409
  }
]
==========================
Server URL: https://console.rhos.agriculture.gov.ie
cmd:  [ 'test', 'sso-dev' ]
args: C:\cesar\cmder\vendor\node-v12\node.exe,C:\work\sso\agent-sso\sso.js,test,sso-dev,--token=NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI,--project=sso-dev ==> params: {
    "token": "NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI",
    "project": "sso-dev"
} 
args ==> {
  action: 'test',
  resource: 'sso-dev',
  params: {
    token: 'NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI',
    project: 'sso-dev'
  }
}
command ==> { required: [ 'token', 'project' ], executor: [Function: executor] }


Missing the  parameters: 

opts =>  {
  action: 'test',
  resource: 'sso-dev',
  params: {
    token: 'NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI',
    project: 'sso-dev'
  }
}
cluster =>  https://console.rhos.agriculture.gov.ie token => NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI
list:  {
  kind: 'PodList',
  apiVersion: 'v1',
  metadata: {
    selfLink: '/api/v1/namespaces/sso-dev/pods',
    resourceVersion: '84193451'
  },
  items: [
    { metadata: [Object], spec: [Object], status: [Object] },
    { metadata: [Object], spec: [Object], status: [Object] },
    { metadata: [Object], spec: [Object], status: [Object] },
    { metadata: [Object], spec: [Object], status: [Object] },
    { metadata: [Object], spec: [Object], status: [Object] },
    { metadata: [Object], spec: [Object], status: [Object] },
    { metadata: [Object], spec: [Object], status: [Object] },
    { metadata: [Object], spec: [Object], status: [Object] }
  ]
}
==========================
Server URL: https://console.rhos.agriculture.gov.ie
cmd:  [ 'get', 'client' ]
args: C:\cesar\cmder\vendor\node-v12\node.exe,C:\work\sso\agent-sso\sso.js,get,client,--token=NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI,--project=sso-dev,--url=https://ss073-sso-dev.apps.rhos.agriculture.gov.ie,--realm=demorealm ==> params: {
    "token": "NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI",
    "project": "sso-dev",
    "url": "https://ss073-sso-dev.apps.rhos.agriculture.gov.ie",
    "realm": "demorealm"
} 
args ==> {
  action: 'get',
  resource: 'client',
  params: {
    token: 'NWOvLHXor8tfEn7eoaXmAmQtj6mSLvdJ47jEq_dfdrI',
    project: 'sso-dev',
    url: 'https://ss073-sso-dev.apps.rhos.agriculture.gov.ie',
    realm: 'demorealm'
  }
}
command ==> { required: [ 'realm', 'url' ], executor: [AsyncFunction: executor] }


Missing the  parameters: 

KeycloakAPI:  {
  url: 'https://ss073-sso-dev.apps.rhos.agriculture.gov.ie',
  realm: 'demorealm',
  id: undefined
}
[
    {
        "id": "1afd150d-f4ff-44a7-99be-dbc06f9bbfdb",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
        ],
        "optionalClientScopes": [
            "address",
            "phone",
            "offline_access"
        ],
        "access": {
            "view": true,
            "configure": true,
            "manage": true
        }
    },
    {
        "id": "d711f46a-0e27-40f1-b745-4670e34f1a64",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
        ],
        "optionalClientScopes": [
            "address",
            "phone",
            "offline_access"
        ],
        "access": {
            "view": true,
            "configure": true,
            "manage": true
        }
    },
    {
        "id": "deb756e6-dd6f-452a-b153-09eba8b8070b",
        "clientId": "webapp1",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
            "*"
        ],
        "webOrigins": [
            "*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": true,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
            "saml.assertion.signature": "false",
            "saml.force.post.binding": "false",
            "saml.multivalued.roles": "false",
            "saml.encrypt": "false",
            "login_theme": "dafm-theme",
            "saml.server.signature": "false",
            "saml.server.signature.keyinfo.ext": "false",
            "exclude.session.state.from.auth.response": "false",
            "saml_force_name_id_format": "false",
            "saml.client.signature": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "saml.authnstatement": "false",
            "display.on.consent.screen": "false",
            "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
        ],
        "optionalClientScopes": [
            "address",
            "phone",
            "offline_access"
        ],
        "access": {
            "view": true,
            "configure": true,
            "manage": true
        }
    },
    {
        "id": "2c68b158-ac2a-441e-8e4f-6c1437e2326d",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "baseUrl": "/auth/admin/demorealm/console/index.html",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
            "/auth/admin/demorealm/console/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
            {
                "id": "34531cd0-e8a8-4b0d-b4ea-377026699608",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                    "userinfo.token.claim": "true",
                    "user.attribute": "locale",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "locale",
                    "jsonType.label": "String"
                }
            }
        ],
        "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
        ],
        "optionalClientScopes": [
            "address",
            "phone",
            "offline_access"
        ],
        "access": {
            "view": true,
            "configure": true,
            "manage": true
        }
    },
    {
        "id": "25aceda3-0498-47d8-91d3-80fb972c9d32",
        "clientId": "fish.test.dafm.gov.ie",
        "rootUrl": "",
        "adminUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
            "/*"
        ],
        "webOrigins": [
            "/*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
        ],
        "optionalClientScopes": [
            "address",
            "phone",
            "offline_access"
        ],
        "access": {
            "view": true,
            "configure": true,
            "manage": true
        }
    },
    {
        "id": "96ecf942-3a28-4d9c-a0c2-35d9cf9d2cbe",
        "clientId": "account",
        "name": "${client_account}",
        "baseUrl": "/auth/realms/demorealm/account",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "defaultRoles": [
            "view-profile",
            "manage-account"
        ],
        "redirectUris": [
            "/auth/realms/demorealm/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
        ],
        "optionalClientScopes": [
            "address",
            "phone",
            "offline_access"
        ],
        "access": {
            "view": true,
            "configure": true,
            "manage": true
        }
    },
    {
        "id": "d23f577c-fc3c-40fe-b384-bbb4e37373cb",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
        ],
        "optionalClientScopes": [
            "address",
            "phone",
            "offline_access"
        ],
        "access": {
            "view": true,
            "configure": true,
            "manage": true
        }
    }
]
==========================
Server URL: https://console.rhos.agriculture.gov.ie
cmd:  [ 'find', 'client' ]
args: C:\cesar\cmder\vendor\node-v12\node.exe,C:\work\sso\agent-sso\sso.js,find,client,--project=sso-dev,--url=https://ss073-sso-dev.apps.rhos.agriculture.gov.ie,--realm=demorealm,--query=clientId=webapp1 ==> params: {
    "project": "sso-dev",
    "url": "https://ss073-sso-dev.apps.rhos.agriculture.gov.ie",
    "realm": "demorealm",
    "query": "clientId=webapp1"
} 
args ==> {
  action: 'find',
  resource: 'client',
  params: {
    project: 'sso-dev',
    url: 'https://ss073-sso-dev.apps.rhos.agriculture.gov.ie',
    realm: 'demorealm',
    query: 'clientId=webapp1'
  }
}
command ==> {
  required: [ 'realm', 'url', 'query' ],
  executor: [AsyncFunction: executor]
}


Missing the  parameters: 

KeycloakAPI:  {
  url: 'https://ss073-sso-dev.apps.rhos.agriculture.gov.ie',
  realm: 'demorealm',
  id: undefined
}
{
    "id": "deb756e6-dd6f-452a-b153-09eba8b8070b",
    "clientId": "webapp1",
    "surrogateAuthRequired": false,
    "enabled": true,
    "clientAuthenticatorType": "client-secret",
    "redirectUris": [
        "*"
    ],
    "webOrigins": [
        "*"
    ],
    "notBefore": 0,
    "bearerOnly": false,
    "consentRequired": false,
    "standardFlowEnabled": true,
    "implicitFlowEnabled": true,
    "directAccessGrantsEnabled": true,
    "serviceAccountsEnabled": false,
    "publicClient": false,
    "frontchannelLogout": false,
    "protocol": "openid-connect",
    "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "login_theme": "dafm-theme",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
    },
    "authenticationFlowBindingOverrides": {},
    "fullScopeAllowed": true,
    "nodeReRegistrationTimeout": -1,
    "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
    ],
    "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
    ],
    "access": {
        "view": true,
        "configure": true,
        "manage": true
    }
}
==========================
Server URL: https://console.rhos.agriculture.gov.ie
cmd:  [ 'filter', 'client' ]
args: C:\cesar\cmder\vendor\node-v12\node.exe,C:\work\sso\agent-sso\sso.js,filter,client,--project=sso-dev,--url=https://ss073-sso-dev.apps.rhos.agriculture.gov.ie,--realm=demorealm,--query=enabled=true ==> params: {
    "project": "sso-dev",
    "url": "https://ss073-sso-dev.apps.rhos.agriculture.gov.ie",
    "realm": "demorealm",
    "query": "enabled=true"
} 
args ==> {
  action: 'filter',
  resource: 'client',
  params: {
    project: 'sso-dev',
    url: 'https://ss073-sso-dev.apps.rhos.agriculture.gov.ie',
    realm: 'demorealm',
    query: 'enabled=true'
  }
}
command ==> {
  required: [ 'realm', 'url', 'query' ],
  executor: [AsyncFunction: executor]
}


Missing the  parameters: 

KeycloakAPI:  {
  url: 'https://ss073-sso-dev.apps.rhos.agriculture.gov.ie',
  realm: 'demorealm',
  id: undefined
}
query=>  { enabled: 'true' }
[
    {
        "id": "1afd150d-f4ff-44a7-99be-dbc06f9bbfdb",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
        ],
        "optionalClientScopes": [
            "address",
            "phone",
            "offline_access"
        ],
        "access": {
            "view": true,
            "configure": true,
            "manage": true
        }
    },
    {
        "id": "d711f46a-0e27-40f1-b745-4670e34f1a64",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
        ],
        "optionalClientScopes": [
            "address",
            "phone",
            "offline_access"
        ],
        "access": {
            "view": true,
            "configure": true,
            "manage": true
        }
    },
    {
        "id": "deb756e6-dd6f-452a-b153-09eba8b8070b",
        "clientId": "webapp1",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
            "*"
        ],
        "webOrigins": [
            "*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": true,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
            "saml.assertion.signature": "false",
            "saml.force.post.binding": "false",
            "saml.multivalued.roles": "false",
            "saml.encrypt": "false",
            "login_theme": "dafm-theme",
            "saml.server.signature": "false",
            "saml.server.signature.keyinfo.ext": "false",
            "exclude.session.state.from.auth.response": "false",
            "saml_force_name_id_format": "false",
            "saml.client.signature": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "saml.authnstatement": "false",
            "display.on.consent.screen": "false",
            "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
        ],
        "optionalClientScopes": [
            "address",
            "phone",
            "offline_access"
        ],
        "access": {
            "view": true,
            "configure": true,
            "manage": true
        }
    },
    {
        "id": "2c68b158-ac2a-441e-8e4f-6c1437e2326d",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "baseUrl": "/auth/admin/demorealm/console/index.html",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
            "/auth/admin/demorealm/console/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
            {
                "id": "34531cd0-e8a8-4b0d-b4ea-377026699608",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                    "userinfo.token.claim": "true",
                    "user.attribute": "locale",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "locale",
                    "jsonType.label": "String"
                }
            }
        ],
        "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
        ],
        "optionalClientScopes": [
            "address",
            "phone",
            "offline_access"
        ],
        "access": {
            "view": true,
            "configure": true,
            "manage": true
        }
    },
    {
        "id": "25aceda3-0498-47d8-91d3-80fb972c9d32",
        "clientId": "fish.test.dafm.gov.ie",
        "rootUrl": "",
        "adminUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
            "/*"
        ],
        "webOrigins": [
            "/*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
        ],
        "optionalClientScopes": [
            "address",
            "phone",
            "offline_access"
        ],
        "access": {
            "view": true,
            "configure": true,
            "manage": true
        }
    },
    {
        "id": "96ecf942-3a28-4d9c-a0c2-35d9cf9d2cbe",
        "clientId": "account",
        "name": "${client_account}",
        "baseUrl": "/auth/realms/demorealm/account",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "defaultRoles": [
            "view-profile",
            "manage-account"
        ],
        "redirectUris": [
            "/auth/realms/demorealm/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
        ],
        "optionalClientScopes": [
            "address",
            "phone",
            "offline_access"
        ],
        "access": {
            "view": true,
            "configure": true,
            "manage": true
        }
    },
    {
        "id": "d23f577c-fc3c-40fe-b384-bbb4e37373cb",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
        ],
        "optionalClientScopes": [
            "address",
            "phone",
            "offline_access"
        ],
        "access": {
            "view": true,
            "configure": true,
            "manage": true
        }
    }
]
==========================
Server URL: https://console.rhos.agriculture.gov.ie
cmd:  [ 'filter' ]
args: C:\cesar\cmder\vendor\node-v12\node.exe,C:\work\sso\agent-sso\sso.js,filter,--project=sso-dev,--url=https://ss073-sso-dev.apps.rhos.agriculture.gov.ie,--realm=demorealm,--query=notBefore=0 ==> params: {
    "project": "sso-dev",
    "url": "https://ss073-sso-dev.apps.rhos.agriculture.gov.ie",
    "realm": "demorealm",
    "query": "notBefore=0"
} 
args ==> {
  action: 'filter',
  resource: undefined,
  params: {
    project: 'sso-dev',
    url: 'https://ss073-sso-dev.apps.rhos.agriculture.gov.ie',
    realm: 'demorealm',
    query: 'notBefore=0'
  }
}
command ==> {
  required: [ 'realm', 'url', 'query' ],
  executor: [AsyncFunction: executor]
}


Missing the  parameters: 

Need an resource example: node sso.js -get url realms
Server URL: https://console.rhos.agriculture.gov.ie
cmd:  []
args: C:\cesar\cmder\vendor\node-v12\node.exe,C:\work\sso\agent-sso\sso.js ==> params: {} 
usage: 

node sso.js <action> <resource> <params>

actions: 

clean 
clear 
url 
user 
ip 
get 
find 
filter 
post 
install 
builder 
test 
route 
useThisImage 
install-p
