def PROJECT = "cicd"

pipeline {
    agent any

    tools {
     maven 'Maven_3_9_9'
    }

    stages {

        /*
          Looking for an Agent
        */
        stage('Preparation'){
            steps {
                script{
                    def AGENT_POD = getRunningPod(CLUSTER, 'cicd', 'sso-bot')
                    echo "AGENT: ${AGENT_POD} for NS: ${PROJECT}"

                    echo "Testing plugin integration"
                    testPluginIntegration(PROJECT, AGENT_POD)

                    echo "Testing roles mapping..."
                    testingCorrectRoleAssignment(PROJECT, AGENT_POD)


                 }
            }
        }
    }
}

/*
    ============================================== rest-user-storage-spi-jar-with-dependencies.jar ==============================================
*/

def getRunningPod(CLUSTER, namespace, label) {
     println "Cluster ${CLUSTER}: namespace ${namespace} with label: ${label}"

     openshift.withCluster( CLUSTER ) {
        openshift.withProject( namespace ){
            def rc = openshift.selector("pod" , [app: label] )
            return rc.object()['metadata']['name']
        }
    }
}

def testPluginIntegration(PROJECT, podName) {

    echo "testPluginIntegration: ${podName}"
    sh 'rm -f result.json'
    sh "oc exec -n ${PROJECT} ${podName} -- node sso.js -clear"

    echo 'Authenticating against Red Hat SSO'
    sh "oc exec -n ${PROJECT} ${podName} -- node sso.js -url ${TARGET_URL} JAMES.WHITE @d3vpw4812!! demorealm"
    sh "oc cp -n ${PROJECT} ${podName}:logs/test_result.json result.json"

    script {
        def result = readJSON file: 'result.json'

        assert result['name'] == 'WILLIAM GEOGHEGAN'
        assert result['ccsid'] == '378476'
        assert result['preferred_username'] == 'JAMES.WHITE'
        assert result['given_name'] == 'WILLIAM'
        assert result['family_name'] == 'GEOGHEGAN'
    }
}

def testingCorrectRoleAssignment(PROJECT, podName) {
    echo "testingCorrectRoleAssignment: ${podName}"
    sh "rm -f correct_role_assignment.json && sleep 2"
    sh "oc exec -n ${PROJECT} ${podName} -- node sso.js -clear"

    echo 'Authenticating against Red Hat SSO'
    sh "oc exec -n ${PROJECT} ${podName} -- node sso.js -url ${TARGET_URL} TESTUSER1B @d3vpw4812!! demorealm"
    sh "oc cp -n ${PROJECT} ${podName}:logs/test_result.json correct_role_assignment.json"

    script {
        def result = readJSON file: 'correct_role_assignment.json'

        assert result['name'] == 'JOHN ENRIGHT'
        assert result['preferred_username'] == 'TESTUSER1B'
        assert result['given_name'] == 'JOHN'
        assert result['family_name'] == 'ENRIGHT'
       // role = result['realm_access']['roles'].find { it == "aim_farmer" }
       // assert role == "aim_farmer"
    }
}
